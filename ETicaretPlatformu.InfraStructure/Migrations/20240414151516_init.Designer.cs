// <auto-generated />
using System;
using ETicaretPlatformu.InfraStructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETicaretPlatformu.InfraStructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
    [Migration("20240414153419_init")]
    partial class init
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
    [Migration("20240414151516_init")]
    partial class init
========
    [Migration("20240414153917_initial")]
    partial class initial
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.CartLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartLines");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7681),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(7832),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6239),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Elektronik Ürünler",
                            Name = "Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7684),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(7857),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6249),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Giyim Ürünleri",
                            Name = "Giyim",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7686),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(7859),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6251),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Ev ve Yaşam Ürünleri",
                            Name = "Ev & Yaşam",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7687),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(7861),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6252),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Kitaplar",
                            Name = "Kitap",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7688),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(7863),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6253),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Spor ve Outdoor Ürünleri",
                            Name = "Spor & Outdoor",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7716),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8010),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6288),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Next Generation Smart Phone",
                            ImagePath = "/images/ProductImages/smartPhone.jpg",
                            Name = "Smart Phone",
                            Price = 2000m,
                            Status = 1,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7722),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8018),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6293),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Wireless Headphones",
                            ImagePath = "/images/ProductImages/HeadPhones.jpg",
                            Name = "Headphones",
                            Price = 100m,
                            Status = 1,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7724),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8027),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6295),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "New Season Women's Dress",
                            ImagePath = "/images/ProductImages/Dress.jpg",
                            Name = "Dress",
                            Price = 150m,
                            Status = 1,
                            StockQuantity = 150
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7725),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8029),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6296),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Slim Fit Men's Shirt",
                            ImagePath = "/images/ProductImages/Shirt.jpg",
                            Name = "Shirt",
                            Price = 80m,
                            Status = 1,
                            StockQuantity = 120
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7727),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8032),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6297),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "5-Function Kitchen Robot",
                            ImagePath = "/images/ProductImages/KitchenRobot.jpg",
                            Name = "Kitchen Robot",
                            Price = 300m,
                            Status = 1,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7729),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8037),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6299),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Flowering Houseplant",
                            ImagePath = "/images/ProductImages/HousePlant.jpg",
                            Name = "Houseplant",
                            Price = 50m,
                            Status = 1,
                            StockQuantity = 300
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7737),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8040),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6301),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Latest Science Fiction Novel",
                            ImagePath = "/images/ProductImages/ScienceFictionNovel.jpg",
                            Name = "Fiction Novel",
                            Price = 20m,
                            Status = 1,
                            StockQuantity = 500
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7738),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8044),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6302),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Ottoman Empire History Book",
                            ImagePath = "/images/ProductImages/HistoryBook.jpg",
                            Name = "History Book",
                            Price = 30m,
                            Status = 1,
                            StockQuantity = 400
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7740),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8046),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6304),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "Yoga Exercise Mat",
                            ImagePath = "/images/ProductImages/YogaMat.jpg",
                            Name = "Yoga Mat",
                            Price = 25m,
                            Status = 1,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 198, DateTimeKind.Local).AddTicks(7742),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 471, DateTimeKind.Local).AddTicks(8052),
========
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 200, DateTimeKind.Local).AddTicks(6306),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Description = "2-Person Camping Tent",
                            ImagePath = "/images/ProductImages/CampingTent.jpg",
                            Name = "Camping Tent",
                            Price = 150m,
                            Status = 1,
                            StockQuantity = 100
                        });
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            ConcurrencyStamp = "9b7c5085-8337-48aa-a87b-9d1a4937b5a7",
                            CreateDate = new DateTime(2024, 4, 14, 18, 34, 19, 197, DateTimeKind.Local).AddTicks(4677),
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            ConcurrencyStamp = "0d17f58c-710b-46e6-a3ad-5a324f1f12d1",
                            CreateDate = new DateTime(2024, 4, 14, 18, 15, 15, 459, DateTimeKind.Local).AddTicks(6312),
========
                            ConcurrencyStamp = "543207a3-9171-4732-9ebe-fa3aa30bdc1a",
                            CreateDate = new DateTime(2024, 4, 14, 18, 39, 17, 193, DateTimeKind.Local).AddTicks(4308),
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            FirstName = "admin",
                            ImagePath = "/images/01-admin.jpg",
                            LastName = "admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN",
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414153419_init.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAEO84nk0KhTmny81kNBri+pjRnOgZ7dAS0iCZgpwseMnF8pnOyKLFP+GKgFjDmXXIXg==",
                            PaymentMethod = 0,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63bfd7d3-cd63-403f-961a-a906c33cabf8",
========
<<<<<<<< HEAD:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAENtE1Hbcxh4zBqSuVch/YEP15OKaCtDyRYIxCik6fH9Rqr+c54jEBB8CDdN0NRTQNA==",
                            PaymentMethod = 0,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "571833be-739c-4908-ab6e-061fd14fedde",
========
                            PasswordHash = "AQAAAAEAACcQAAAAEM0izywN4atjIZZxGoH9PBhS82L+ZPg2SfSde4nAMwueodfJR1PT7vHtbPho27qysA==",
                            PaymentMethod = 0,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94f09111-f2ad-4656-a658-2d028d538cf8",
>>>>>>>> origin/Sila:ETicaretPlatformu.InfraStructure/Migrations/20240414153917_initial.Designer.cs
>>>>>>>> origin/master:ETicaretPlatformu.InfraStructure/Migrations/20240414151516_init.Designer.cs
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "Admin",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "Member",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "Admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Cart", b =>
                {
                    b.HasOne("ETicaretPlatformu.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.CartLine", b =>
                {
                    b.HasOne("ETicaretPlatformu.Domain.Entities.Cart", "Cart")
                        .WithMany("CartLines")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETicaretPlatformu.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Order", b =>
                {
                    b.HasOne("ETicaretPlatformu.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("ETicaretPlatformu.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETicaretPlatformu.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Product", b =>
                {
                    b.HasOne("ETicaretPlatformu.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ETicaretPlatformu.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ETicaretPlatformu.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETicaretPlatformu.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ETicaretPlatformu.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Cart", b =>
                {
                    b.Navigation("CartLines");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ETicaretPlatformu.Domain.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
